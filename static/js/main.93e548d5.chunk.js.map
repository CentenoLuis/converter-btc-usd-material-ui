{"version":3,"sources":["assets/customTheme.js","components/navLinks.js","components/Navbar.js","components/ThanksMessage.js","components/SignUpForm.js","components/Popup.js","components/Hero.js","assets/customStyles.js","components/BtcBinancePrice.js","components/BtcCoinCapPrice.js","components/BtcCryptoComparePrice.js","components/BtcGeniniPrice.js","components/BtcPriceCoinGecko.js","components/BtcCoinPaprika.js","components/BtcAverage.js","components/Prices.js","components/BtcUsdConverter.js","assets/carouselImages.js","components/Carousel.js","components/Footer.js","App.js","index.js"],"names":["secondaryColor","dangerColor","red","customtheme","createTheme","palette","primary","main","secondary","error","components","MuiLink","styleOverrides","root","color","navLinks","id","text","Navbar","AppBar","position","Toolbar","Stack","spacing","direction","Link","href","target","underline","Typography","links","map","link","ThanksMessage","props","message","Dialog","open","DialogContent","Mood","fontSize","SentimentSatisfied","SignUpForm","setOpenPopUp","useState","email","setEmail","showMessage","setShowMessage","setMessage","Container","align","maxWidth","Box","component","sx","m","width","noValidate","autoComplete","TextField","type","label","variant","onChange","e","value","Button","onClick","preventDefault","setTimeout","endIcon","Send","Popup","title","openPopUp","children","DialogTitle","style","display","flexGrow","Close","dividers","Hero","paddingTop","gutterBottom","Grid","container","alignItems","justifyContent","item","xs","size","useStyles","makeStyles","media","height","objectFit","marginTop","BtcBinancePrice","classes","price","setPrice","useEffect","getPrice","a","fetch","response","json","data","parseInt","toFixed","console","log","Card","className","CardMedia","image","alt","CardContent","CardActions","BtcCoinCapPrice","Number","priceUsd","BtcCryptoComparePrice","USD","BtcGeminiPrice","receivedData","Object","entries","BtcPriceCoinGecko","bitcoin","usd","quotes","AveragePrice","averagePrice","setAveragePrice","interval","setInterval","getAverage","clearInterval","urlCoinGecko","urlBinance","urlCoinPaprika","urlCryptoCompare","responseGemini","dataGemini","priceGemini","responseCryptoCompare","dataCryptoCompare","priceCryptoCompare","responseCoinPaprika","dataCoinPaprika","priceCoinPaprika","responseBinance","dataBinance","priceBinance","responseCoinGecko","dataCoinGecko","priceCoinGecko","Prices","BtcAverage","paddingBottom","BtcCoinPaprika","BtcUsdConverter","usdInput","setUsdInput","btcInput","setBtcInput","Divider","marginBottom","carouselImages","Carousel","length","current","setCurrent","slide","index","src","Footer","fullWidth","IconButton","App","ThemeProvider","theme","customTheme","CssBaseline","ReacatDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93e548d5.chunk.js","sourcesContent":["import { createTheme } from \"@mui/material/styles\";\r\nimport { purple, orange, red } from \"@mui/material/colors\";\r\n\r\nconst primaryColor = \"#fbc531\";\r\nconst secondaryColor = \"#00a8ff\";\r\nconst dangerColor = red[900];\r\n\r\nconst customtheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: primaryColor,\r\n    },\r\n    secondary: {\r\n      main: secondaryColor,\r\n    },\r\n    error: {\r\n      main: dangerColor,\r\n    },\r\n  },\r\n  components: {\r\n    MuiLink: {\r\n      styleOverrides: {\r\n        root: {\r\n          \"&:hover\": { color: secondaryColor },\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default customtheme;\r\n","const navLinks = [\r\n  { id: 2, text: \"Prices\" },\r\n  { id: 3, text: \"Converter\" },\r\n  { id: 4, text: \"News\" },\r\n];\r\n\r\nexport default navLinks;\r\n","import React from \"react\";\r\nimport { AppBar, Toolbar, Typography, Stack, Link } from \"@mui/material\";\r\nimport CalculateTwoToneIcon from \"@mui/icons-material/CalculateTwoTone\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nimport links from \"./navLinks\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n      <AppBar position=\"sticky\">\r\n        <Toolbar>\r\n          <Stack spacing={4} direction=\"row\">\r\n            <CalculateTwoToneIcon />\r\n            <Link href=\"#\" target=\"blank\" underline=\"none\" color=\"inherit\">\r\n              <Typography>USD-BTC Converter</Typography>\r\n            </Link>\r\n            {links.map((link) => {\r\n              return (\r\n                <div id={link.id}>\r\n                  <Link\r\n                    href=\"#\"\r\n                    target=\"blank\"\r\n                    underline=\"none\"\r\n                    color=\"inherit\"\r\n                  >\r\n                    <Typography>{link.text}</Typography>\r\n                  </Link>\r\n                </div>\r\n              );\r\n            })}\r\n          </Stack>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Typography, Dialog, DialogContent } from \"@mui/material\";\r\nimport { Mood, SentimentSatisfied } from \"@mui/icons-material\";\r\n\r\nconst ThanksMessage = (props) => {\r\n  const { message } = props;\r\n\r\n  if (message === \"Thanks\") {\r\n    return (\r\n      <>\r\n        <Dialog open=\"true\">\r\n          <DialogContent>\r\n            <Typography>{message}</Typography>\r\n            <Mood fontSize=\"large\" />\r\n          </DialogContent>\r\n        </Dialog>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Dialog open=\"true\">\r\n        <DialogContent>\r\n          <Typography>{message}</Typography>\r\n          <SentimentSatisfied fontSize=\"large\" />\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ThanksMessage;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Typography,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  Paper,\r\n  Container,\r\n  Grid,\r\n  CardActionArea,\r\n  Stack,\r\n  Button,\r\n  Box,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { Send, Mood, SentimentSatisfiedIcon } from \"@mui/icons-material\";\r\nimport ThanksMessage from \"./ThanksMessage\";\r\n\r\nconst SignUpForm = ({ setOpenPopUp }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [showMessage, setShowMessage] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (email) {\r\n      setMessage(\"Thanks\");\r\n      setShowMessage(true);\r\n      setTimeout(() => {\r\n        setShowMessage(false);\r\n        setOpenPopUp(false);\r\n      }, 2000);\r\n    } else {\r\n      setMessage(\"Please enter your email\");\r\n      setShowMessage(true);\r\n      setTimeout(() => {\r\n        setShowMessage(false);\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container align=\"center\" maxWidth=\"xl\">\r\n        <Box\r\n          component=\"form\"\r\n          sx={{\r\n            \"& > :not(style)\": { m: 3, width: \"40ch\" },\r\n          }}\r\n          noValidate\r\n          autoComplete=\"off\"\r\n        >\r\n          {showMessage && <ThanksMessage message={message} />}\r\n          <TextField\r\n            type=\"email\"\r\n            label=\"Email\"\r\n            variant=\"outlined\"\r\n            onChange={(e) => {\r\n              setEmail(e.target.value);\r\n            }}\r\n            value={email}\r\n          />\r\n          <Button type=\"submit\" onClick={handleSubmit} endIcon={<Send />}>\r\n            Submit\r\n          </Button>\r\n        </Box>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { Close } from \"@mui/icons-material\";\r\nimport SignUpForm from \"./SignUpForm\";\r\n\r\nconst Popup = (props) => {\r\n  const { title, children, openPopUp, setOpenPopUp } = props;\r\n  return (\r\n    <Dialog open={openPopUp}>\r\n      <DialogTitle>\r\n        <div style={{ display: \"flex\" }}>\r\n          <Typography variant=\"h3\" component=\"div\" style={{ flexGrow: 1 }}>\r\n            {title}\r\n          </Typography>\r\n          <Button onClick={() => setOpenPopUp(false)}>\r\n            <Close />\r\n          </Button>\r\n        </div>\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        <SignUpForm setOpenPopUp={setOpenPopUp} />\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default Popup;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  Typography,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  Paper,\r\n  Container,\r\n  Grid,\r\n  CardActionArea,\r\n  Stack,\r\n  Button,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport Popup from \"./Popup\";\r\n\r\nconst Hero = () => {\r\n  const [openPopUp, setOpenPopUp] = useState(true);\r\n  return (\r\n    <>\r\n      <div>\r\n        <Container align=\"center\" maxWidth=\"xl\">\r\n          <Typography style={{ paddingTop: \"0px\" }} variant=\"h4\" gutterBottom>\r\n            Why do bitcoins have value?\r\n          </Typography>\r\n          <Typography variant=\"p\" gutterBottom>\r\n            Bitcoins have value because they are useful as a form of money.\r\n            Bitcoin has the characteristics of money (durability, portability,\r\n            fungibility, scarcity, divisibility, and recognizability) based on\r\n            the properties of mathematics rather than relying on physical\r\n            properties (like gold and silver) or trust in central authorities\r\n            (like fiat currencies). In short, Bitcoin is backed by mathematics.\r\n            With these attributes, all that is required for a form of money to\r\n            hold value is trust and adoption. In the case of Bitcoin, this can\r\n            be measured by its growing base of users, merchants, and startups.\r\n            As with all currency, bitcoin's value comes only and directly from\r\n            people willing to accept them as payment.\r\n          </Typography>\r\n\r\n          <Grid\r\n            container\r\n            spacing={0}\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            style={{ paddingTop: \"40px\" }}\r\n          >\r\n            <Grid item xs={3}>\r\n              <Stack spacing={6} direction=\"row\">\r\n                <Button sx={{ color: \"#fff\" }} variant=\"contained\" size=\"large\">\r\n                  BUY BTC\r\n                </Button>\r\n                <Button\r\n                  size=\"large\"\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  sx={{ color: \"white\" }}\r\n                >\r\n                  SELL BTC\r\n                </Button>\r\n                <Button\r\n                  size=\"large\"\r\n                  variant=\"contained\"\r\n                  color=\"error\"\r\n                  onClick={() => setOpenPopUp(true)}\r\n                >\r\n                  Subscribe\r\n                </Button>\r\n              </Stack>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n        <Popup\r\n          openPopUp={openPopUp}\r\n          setOpenPopUp={setOpenPopUp}\r\n          title=\"Subscribe\"\r\n        ></Popup>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import { makeStyles } from \"@mui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 300,\r\n    // margin: \"auto\",\r\n    // objectFit: \"contain\",\r\n  },\r\n  media: {\r\n    // height: 200,\r\n    // blockSize: 300,\r\n    height: 200,\r\n    width: \"100%\",\r\n    objectFit: \"contain\",\r\n    marginTop: \"2\",\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport useStyles from \"../assets/customStyles\";\r\nimport {\r\n  Typography,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  Paper,\r\n  Container,\r\n  Grid,\r\n  CardActionArea,\r\n  Stack,\r\n  Button,\r\n  Box,\r\n} from \"@mui/material\";\r\n\r\nconst BtcBinancePrice = () => {\r\n  const classes = useStyles();\r\n  const [price, setPrice] = useState(0);\r\n  useEffect(() => {\r\n    getPrice();\r\n  }, []);\r\n\r\n  const getPrice = async () => {\r\n    const url = \"https://api.binance.com/api/v3/avgPrice?symbol=BTCUSDT\";\r\n    try {\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      const price = parseInt(data.price);\r\n      setPrice(price.toFixed(0));\r\n    } catch {\r\n      console.log(\"FETCH ERROR\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Grid item>\r\n        <Card className={classes.root}>\r\n          <CardMedia\r\n            className={classes.media}\r\n            component=\"img\"\r\n            image=\"https://public.bnbstatic.com/static/images/common/ogImage.jpg\"\r\n            alt=\"Binance\"\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"p\">\r\n              Price from Binance\r\n            </Typography>\r\n            <Typography variant=\"h4\">{price}</Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button size=\"small\" variant=\"contained\">\r\n              Visit\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BtcBinancePrice;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport useStyles from \"../assets/customStyles\";\r\nimport {\r\n  Typography,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  Paper,\r\n  Container,\r\n  Grid,\r\n  CardActionArea,\r\n  Stack,\r\n  Button,\r\n  Box,\r\n} from \"@mui/material\";\r\n\r\nconst BtcCoinCapPrice = () => {\r\n  const classes = useStyles();\r\n  const [price, setPrice] = useState(0);\r\n  useEffect(() => {\r\n    getPrice();\r\n  }, []);\r\n\r\n  const getPrice = async () => {\r\n    const url =\r\n      \"https://min-api.cryptocompare.com/data/price?fsym=BTC&tsyms=USD\";\r\n    try {\r\n      const response = await fetch(\"https://api.coincap.io/v2/assets/bitcoin\");\r\n      const data = await response.json();\r\n      const price = Number(data.data.priceUsd);\r\n      setPrice(price.toFixed(0));\r\n    } catch {\r\n      console.log(\"FETCH ERROR\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Grid item>\r\n        <Card className={classes.root}>\r\n          <CardMedia\r\n            component=\"img\"\r\n            image=\"https://www.ideasbynature.com/wp-content/uploads/2018/07/coincap-logo-dark.jpg\"\r\n            alt=\"Coincap\"\r\n            className={classes.media}\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"p\">\r\n              Price from Coincap\r\n            </Typography>\r\n            <Typography variant=\"h4\">{price}</Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button size=\"small\" variant=\"contained\">\r\n              Visit\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BtcCoinCapPrice;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport useStyles from \"../assets/customStyles\";\r\nimport {\r\n  Typography,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  Paper,\r\n  Container,\r\n  Grid,\r\n  CardActionArea,\r\n  Stack,\r\n  Button,\r\n  Box,\r\n} from \"@mui/material\";\r\n\r\nconst BtcCryptoComparePrice = () => {\r\n  const classes = useStyles();\r\n  const [price, setPrice] = useState(0);\r\n  useEffect(() => {\r\n    getPrice();\r\n  }, []);\r\n\r\n  const getPrice = async () => {\r\n    const url =\r\n      \"https://min-api.cryptocompare.com/data/price?fsym=BTC&tsyms=USD\";\r\n    try {\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      const price = data.USD;\r\n      setPrice(price.toFixed(0));\r\n    } catch {\r\n      console.log(\"FETCH ERROR\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Grid item>\r\n        <Card className={classes.root}>\r\n          <CardMedia\r\n            className={classes.media}\r\n            component=\"img\"\r\n            image=\"https://www.cryptocompare.com/media/35651334/0.png\"\r\n            alt=\"Binance\"\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"p\">\r\n              Price from Cryptocompare\r\n            </Typography>\r\n            <Typography variant=\"h4\">{price}</Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button size=\"small\" variant=\"contained\">\r\n              Visit\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BtcCryptoComparePrice;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport useStyles from \"../assets/customStyles\";\r\nimport {\r\n  Typography,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  Paper,\r\n  Container,\r\n  Grid,\r\n  CardActionArea,\r\n  Stack,\r\n  Button,\r\n  Box,\r\n} from \"@mui/material\";\r\n\r\nconst BtcGeminiPrice = () => {\r\n  const classes = useStyles();\r\n  const [price, setPrice] = useState(0);\r\n  useEffect(() => {\r\n    getPrice();\r\n  }, []);\r\n\r\n  const getPrice = async () => {\r\n    try {\r\n      const response = await fetch(\"https://api.gemini.com/v2/ticker/btcusd\");\r\n      const data = await response.json();\r\n      const receivedData = Object.entries(data);\r\n      const price = parseInt(receivedData[6][1]);\r\n      setPrice(price.toFixed(0));\r\n    } catch {\r\n      console.log(\"FETCH ERROR\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Grid item>\r\n        <Card className={classes.root}>\r\n          <CardMedia\r\n            className={classes.media}\r\n            component=\"img\"\r\n            image=\"https://bitfinanzas.com/wp-content/uploads/Exchange-de-criptomonedas-Gemini-se-une-a-la-tecnologia-Nasdaq-para-implementar-software-de-vigilancia-750x375.png\"\r\n            alt=\"Coincap\"\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"p\">\r\n              Price from Gemini\r\n            </Typography>\r\n            <Typography variant=\"h4\">{price}</Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button size=\"small\" variant=\"contained\">\r\n              Visit\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BtcGeminiPrice;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n  Typography,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  Paper,\r\n  Container,\r\n  Grid,\r\n  CardActionArea,\r\n  Stack,\r\n  Button,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport useStyles from \"../assets/customStyles\";\r\n\r\nconst BtcPriceCoinGecko = () => {\r\n  const classes = useStyles();\r\n  const [price, setPrice] = useState(0);\r\n  useEffect(() => {\r\n    getPrice();\r\n  }, []);\r\n\r\n  const getPrice = async () => {\r\n    try {\r\n      const url =\r\n        \"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd\";\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      const price = Number(data.bitcoin.usd);\r\n      setPrice(price);\r\n    } catch {\r\n      console.log(\"FETCH ERROR\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Grid item>\r\n        <Card className={classes.root}>\r\n          <CardMedia\r\n            className={classes.media}\r\n            component=\"img\"\r\n            height=\"275\"\r\n            image=\"https://u.today/sites/default/files/styles/736x/public/2021-07/8815.jpg\"\r\n            alt=\"Coincap\"\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"p\">\r\n              Price from Coingecko\r\n            </Typography>\r\n            <Typography variant=\"h4\">{price}</Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button size=\"small\" variant=\"contained\">\r\n              Visit\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BtcPriceCoinGecko;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport useStyles from \"../assets/customStyles\";\r\nimport {\r\n  Typography,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  Paper,\r\n  Container,\r\n  Grid,\r\n  CardActionArea,\r\n  Stack,\r\n  Button,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport { ClassNames } from \"@emotion/react\";\r\n\r\nconst BtcCoinCapPrice = () => {\r\n  const classes = useStyles();\r\n  const [price, setPrice] = useState(0);\r\n  useEffect(() => {\r\n    getPrice();\r\n  }, []);\r\n\r\n  const getPrice = async () => {\r\n    try {\r\n      const url = \"https://api.coinpaprika.com/v1/tickers/btc-bitcoin\";\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      const price = Number(data.quotes.USD.price);\r\n      setPrice(price.toFixed(0));\r\n    } catch {\r\n      console.log(\"FETCH ERROR\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Grid item>\r\n        <Card className={classes.root}>\r\n          <CardMedia\r\n            className={classes.media}\r\n            component=\"img\"\r\n            image=\"https://www.paracriptos.com/wp-content/uploads/2021/01/coinpaprika-logo-768x308.png\"\r\n            alt=\"Coincap\"\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"p\">\r\n              Price from Coinpaprika\r\n            </Typography>\r\n            <Typography variant=\"h4\">{price}</Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button size=\"small\" variant=\"contained\">\r\n              Visit\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BtcCoinCapPrice;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport useStyles from \"../assets/customStyles\";\r\nimport {\r\n  Typography,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  Paper,\r\n  Container,\r\n  Grid,\r\n  CardActionArea,\r\n  Stack,\r\n  Button,\r\n  Box,\r\n} from \"@mui/material\";\r\n\r\nconst AveragePrice = () => {\r\n  const [averagePrice, setAveragePrice] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      getAverage();\r\n    }, 30000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAverage();\r\n  }, []);\r\n\r\n  const getAverage = async () => {\r\n    try {\r\n      const urlCoinGecko =\r\n        \"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd\";\r\n      const urlBinance =\r\n        \"https://api.binance.com/api/v3/avgPrice?symbol=BTCUSDT\";\r\n      const urlCoinPaprika =\r\n        \"https://api.coinpaprika.com/v1/tickers/btc-bitcoin\";\r\n      const urlCryptoCompare =\r\n        \"https://min-api.cryptocompare.com/data/price?fsym=BTC&tsyms=USD\";\r\n      const urlGemini = \"https://api.gemini.com/v2/ticker/btcusd\";\r\n\r\n      const responseGemini = await fetch(urlGemini);\r\n      const dataGemini = await responseGemini.json();\r\n      const receivedData = Object.entries(dataGemini);\r\n      const priceGemini = parseInt(receivedData[6][1]);\r\n\r\n      const responseCryptoCompare = await fetch(urlCryptoCompare);\r\n      const dataCryptoCompare = await responseCryptoCompare.json();\r\n      const priceCryptoCompare = dataCryptoCompare.USD;\r\n\r\n      const responseCoinPaprika = await fetch(urlCoinPaprika);\r\n      const dataCoinPaprika = await responseCoinPaprika.json();\r\n      const priceCoinPaprika = Number(dataCoinPaprika.quotes.USD.price);\r\n\r\n      const responseBinance = await fetch(urlBinance);\r\n      const dataBinance = await responseBinance.json();\r\n      const priceBinance = parseInt(dataBinance.price);\r\n\r\n      const responseCoinGecko = await fetch(urlCoinGecko);\r\n      const dataCoinGecko = await responseCoinGecko.json();\r\n      const priceCoinGecko = Number(dataCoinGecko.bitcoin.usd);\r\n\r\n      setAveragePrice(\r\n        (\r\n          (priceBinance +\r\n            priceCoinGecko +\r\n            priceCoinPaprika +\r\n            priceCryptoCompare +\r\n            priceGemini) /\r\n          5\r\n        ).toFixed(0)\r\n      );\r\n    } catch {\r\n      console.log(\"average error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ paddingTop: \"30px\" }}>\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"200\"\r\n          width=\"auto\"\r\n          image=\"https://d500.epimg.net/cincodias/imagenes/2021/08/06/mucho_mas_que_criptos/1628275320_709251_1628771382_noticia_normal_recorte1.jpg\"\r\n          alt=\"Coincap\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"p\">\r\n            Average Price\r\n          </Typography>\r\n          <Typography variant=\"h1\">{averagePrice}</Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AveragePrice;\r\n","import React from \"react\";\r\nimport useStyles from \"../assets/customStyles\";\r\nimport BtcBinancePrice from \"./BtcBinancePrice\";\r\nimport BtcCoinCapPrice from \"./BtcCoinCapPrice\";\r\nimport BtcCryptoComparePrice from \"./BtcCryptoComparePrice\";\r\nimport BtcGeminiPrice from \"./BtcGeniniPrice\";\r\nimport BtcCoinGecko from \"./BtcPriceCoinGecko\";\r\nimport BtcCoinPaprika from \"./BtcCoinPaprika\";\r\nimport BtcAverage from \"./BtcAverage\";\r\nimport {\r\n  Typography,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  Paper,\r\n  Container,\r\n  Grid,\r\n  CardActionArea,\r\n  Stack,\r\n  Button,\r\n  Box,\r\n  Divider,\r\n} from \"@mui/material\";\r\n\r\nconst Prices = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Container align=\"center\" maxWidth=\"xl\">\r\n        {/* <h1>Average Price</h1> */}\r\n        <BtcAverage />\r\n\r\n        <Grid\r\n          container\r\n          spacing={12}\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          style={{ paddingTop: \"20px\", paddingBottom: \"20px\" }}\r\n        >\r\n          <BtcBinancePrice />\r\n          <BtcGeminiPrice />\r\n          <BtcCryptoComparePrice />\r\n          <BtcCoinCapPrice />\r\n          <BtcCoinGecko />\r\n          <BtcCoinPaprika />\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Prices;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n  Typography,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  Paper,\r\n  Container,\r\n  Grid,\r\n  CardActionArea,\r\n  Stack,\r\n  Button,\r\n  Box,\r\n  TextField,\r\n  Divider,\r\n} from \"@mui/material\";\r\n\r\nconst BtcUsdConverter = () => {\r\n  const [averagePrice, setAveragePrice] = useState(0);\r\n  const [usdInput, setUsdInput] = useState(0);\r\n  const [btcInput, setBtcInput] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      getAverage();\r\n    }, 30000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getAverage();\r\n  }, []);\r\n\r\n  const getAverage = async () => {\r\n    try {\r\n      const urlCoinGecko =\r\n        \"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd\";\r\n      const urlBinance =\r\n        \"https://api.binance.com/api/v3/avgPrice?symbol=BTCUSDT\";\r\n      const urlCoinPaprika =\r\n        \"https://api.coinpaprika.com/v1/tickers/btc-bitcoin\";\r\n      const urlCryptoCompare =\r\n        \"https://min-api.cryptocompare.com/data/price?fsym=BTC&tsyms=USD\";\r\n      const urlGemini = \"https://api.gemini.com/v2/ticker/btcusd\";\r\n\r\n      const responseGemini = await fetch(urlGemini);\r\n      const dataGemini = await responseGemini.json();\r\n      const receivedData = Object.entries(dataGemini);\r\n      const priceGemini = parseInt(receivedData[6][1]);\r\n\r\n      const responseCryptoCompare = await fetch(urlCryptoCompare);\r\n      const dataCryptoCompare = await responseCryptoCompare.json();\r\n      const priceCryptoCompare = dataCryptoCompare.USD;\r\n\r\n      const responseCoinPaprika = await fetch(urlCoinPaprika);\r\n      const dataCoinPaprika = await responseCoinPaprika.json();\r\n      const priceCoinPaprika = Number(dataCoinPaprika.quotes.USD.price);\r\n\r\n      const responseBinance = await fetch(urlBinance);\r\n      const dataBinance = await responseBinance.json();\r\n      const priceBinance = parseInt(dataBinance.price);\r\n\r\n      const responseCoinGecko = await fetch(urlCoinGecko);\r\n      const dataCoinGecko = await responseCoinGecko.json();\r\n      const priceCoinGecko = Number(dataCoinGecko.bitcoin.usd);\r\n\r\n      setAveragePrice(\r\n        (\r\n          (priceBinance +\r\n            priceCoinGecko +\r\n            priceCoinPaprika +\r\n            priceCryptoCompare +\r\n            priceGemini) /\r\n          5\r\n        ).toFixed(0)\r\n      );\r\n    } catch {\r\n      console.log(\"average error\");\r\n    }\r\n  };\r\n\r\n  const convertToUsd = (e) => {\r\n    setBtcInput(e.target.value);\r\n    setUsdInput(averagePrice * e.target.value);\r\n  };\r\n\r\n  const convertToBtc = (e) => {\r\n    setUsdInput(e.target.value);\r\n    setBtcInput((e.target.value / averagePrice).toFixed(8));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Divider\r\n        variant=\"fullWidth\"\r\n        style={{\r\n          paddingTop: \"20px\",\r\n          paddingBottom: \"30px\",\r\n          marginBottom: \"30px\",\r\n        }}\r\n      />\r\n      <Typography variant=\"h4\" component=\"div\" align=\"center\">\r\n        USD-BTC Converter\r\n      </Typography>\r\n      <Container align=\"center\" maxWidth=\"xl\">\r\n        <Box\r\n          component=\"form\"\r\n          sx={{\r\n            \"& > :not(style)\": { m: 3, width: \"40ch\" },\r\n            height: \"40vh\",\r\n          }}\r\n          noValidate\r\n          autoComplete=\"off\"\r\n        >\r\n          <TextField\r\n            type=\"number\"\r\n            label=\"USD\"\r\n            variant=\"outlined\"\r\n            onChange={convertToBtc}\r\n            value={usdInput}\r\n          />\r\n          <TextField\r\n            type=\"number\"\r\n            label=\"BTC\"\r\n            variant=\"outlined\"\r\n            onChange={convertToUsd}\r\n            value={btcInput}\r\n          />\r\n        </Box>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BtcUsdConverter;\r\n","export const carouselImages = [\r\n  {\r\n    image:\r\n      \"https://images.pexels.com/photos/7767496/pexels-photo-7767496.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n  },\r\n  {\r\n    image:\r\n      \"https://images.pexels.com/photos/5980573/pexels-photo-5980573.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n  },\r\n  {\r\n    image:\r\n      \"https://images.pexels.com/photos/315788/pexels-photo-315788.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n  },\r\n  {\r\n    image:\r\n      \"https://images.pexels.com/photos/6765371/pexels-photo-6765371.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n  },\r\n  {\r\n    image:\r\n      \"https://images.pexels.com/photos/6765369/pexels-photo-6765369.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\r\n  },\r\n];\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { carouselImages } from \"../assets/carouselImages\";\r\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from \"react-icons/fa\";\r\n\r\nconst Carousel = () => {\r\n  const length = carouselImages.length;\r\n  const [current, setCurrent] = useState(0);\r\n\r\n  const nextSlide = () => {\r\n    setCurrent(current === length - 1 ? 0 : current + 1);\r\n  };\r\n\r\n  const prevSlide = () => {\r\n    setCurrent(current === 0 ? length - 1 : current - 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      nextSlide();\r\n    }, 5000);\r\n    return () => clearInterval(interval);\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   nextSlide();\r\n  // }, []);\r\n\r\n  return (\r\n    <>\r\n      <section className=\"slider\">\r\n        {carouselImages.map((slide, index) => {\r\n          return (\r\n            <div\r\n              className={index === current ? \"slide active\" : \"slide\"}\r\n              key={index}\r\n            >\r\n              {index === current && (\r\n                <img src={slide.image} alt=\"travel image\" className=\"image\" />\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Carousel;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n  Typography,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  Container,\r\n  Grid,\r\n  CardActionArea,\r\n  Stack,\r\n  Button,\r\n  Box,\r\n  TextField,\r\n  Paper,\r\n  IconButton,\r\n  Divider,\r\n} from \"@mui/material\";\r\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\r\nimport GoogleIcon from \"@mui/icons-material/Google\";\r\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <Container align=\"center\">\r\n        <Box\r\n          sx={{\r\n            color: \"#000\",\r\n            height: \"45vh\",\r\n            marginTop: \"10\",\r\n            marginBottom: \"0\",\r\n          }}\r\n          align=\"center\"\r\n        >\r\n          <Grid container spacing={2} direction=\"row\" justifyContent=\"center\">\r\n            <Grid item xs={3}>\r\n              <Typography variant=\"h5\" align=\"left\">\r\n                USD-BTC Converter\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <Typography align=\"left\" variant=\"h6\">\r\n                Contact\r\n              </Typography>\r\n              <Stack\r\n                spacing={1}\r\n                direction=\"column\"\r\n                align=\"left\"\r\n                marginTop=\"1rem\"\r\n              >\r\n                <Typography variant=\"p\">Developer: Luis Centeno</Typography>\r\n                <Typography variant=\"p\">Address: Buenos Aires</Typography>\r\n                <Typography variant=\"p\">Telegram: @luis1080</Typography>\r\n              </Stack>\r\n            </Grid>\r\n            <Grid item xs={3} align=\"left\" color=\"inherit\">\r\n              <Typography variant=\"h6\">Subscribe to our Newsletter</Typography>\r\n              <Stack spacing={6} marginTop=\"1rem\" direction=\"row\">\r\n                <TextField label=\"Email\" fullWidth />\r\n                <Button\r\n                  size=\"large\"\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  sx={{ color: \"white\" }}\r\n                >\r\n                  Send\r\n                </Button>\r\n              </Stack>\r\n              <Stack spacing={4} marginTop=\"1rem\" direction=\"row\" align=\"left\">\r\n                <IconButton>\r\n                  <GitHubIcon />\r\n                </IconButton>\r\n                <IconButton>\r\n                  <GoogleIcon />\r\n                </IconButton>\r\n                <IconButton>\r\n                  <TwitterIcon />\r\n                </IconButton>\r\n              </Stack>\r\n            </Grid>\r\n          </Grid>\r\n          <Divider variant=\"fullWidth\" sx={{ marginTop: \"6rem\" }} />\r\n          <Typography\r\n            variant=\"p\"\r\n            align=\"center\"\r\n            component=\"div\"\r\n            marginTop=\"1rem\"\r\n          >\r\n            2021 | \"All I need is only solutions\" | USD-BTC Converter 1.0 | By\r\n            Luis Centeno\r\n          </Typography>\r\n        </Box>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport { Container, Typography, Divider } from \"@mui/material\";\r\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\r\nimport customTheme from \"./assets/customTheme\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Hero from \"./components/Hero\";\r\nimport Prices from \"./components/Prices\";\r\nimport BtcUsdConverter from \"./components/BtcUsdConverter\";\r\nimport Carousel from \"./components/Carousel\";\r\nimport BtcNews from \"./components/BtcNews\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={customTheme}>\r\n        <CssBaseline />\r\n        <Navbar />\r\n        <Carousel />\r\n        <Container>\r\n          <main>\r\n            <Hero />\r\n            <Prices />\r\n            <BtcUsdConverter />\r\n            {/* <BtcNews /> */}\r\n          </main>\r\n        </Container>\r\n        <Footer />\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReacatDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nimport App from \"./App\";\r\n\r\nReacatDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}